

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

#-----------------------------------------------------------------------------

SET(TRILINOS_INCDIR ${CMAKE_INSTALL_PREFIX}/${${PROJECT_NAME}_INSTALL_INCLUDE_DIR})

#-----------------------------------------------------------------------------

IF(KOKKOS_LEGACY_TRIBITS)

  MESSAGE("LEGACY STUFF GETTING CALLED")

  IF(KOKKOS_ENABLE_EXPLICIT_INSTANTIATION)
    MESSAGE("GOING INTO ETI DIR")
    ADD_SUBDIRECTORY(eti)
    INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/eti")
  ENDIF()

  ASSERT_DEFINED(${PROJECT_NAME}_ENABLE_CXX11)
  ASSERT_DEFINED(${PACKAGE_NAME}_ENABLE_CUDA)

  SET(HEADERS_PUBLIC "")
  SET(HEADERS_PRIVATE "")
  SET(SOURCES "")

  FILE(GLOB HEADERS_PUBLIC Kokkos*.hpp)
  LIST( APPEND HEADERS_PUBLIC ${CMAKE_BINARY_DIR}/${PACKAGE_NAME}_config.h )

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_IMPL impl/*.hpp)
  FILE(GLOB SOURCES_IMPL impl/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_IMPL} )
  LIST(APPEND SOURCES         ${SOURCES_IMPL} )

  INSTALL(FILES ${HEADERS_IMPL} DESTINATION ${TRILINOS_INCDIR}/impl/)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_THREADS Threads/*.hpp)
  FILE(GLOB SOURCES_THREADS Threads/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_THREADS} )
  LIST(APPEND SOURCES         ${SOURCES_THREADS} )

  INSTALL(FILES ${HEADERS_THREADS} DESTINATION ${TRILINOS_INCDIR}/Threads/)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_OPENMP OpenMP/*.hpp)
  FILE(GLOB SOURCES_OPENMP OpenMP/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_OPENMP} )
  LIST(APPEND SOURCES         ${SOURCES_OPENMP} )

  INSTALL(FILES ${HEADERS_OPENMP} DESTINATION ${TRILINOS_INCDIR}/OpenMP/)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_CUDA Cuda/*.hpp)
  FILE(GLOB SOURCES_CUDA Cuda/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CUDA} )
  LIST(APPEND SOURCES         ${SOURCES_CUDA} )

  INSTALL(FILES ${HEADERS_CUDA} DESTINATION ${TRILINOS_INCDIR}/Cuda/)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_PATTERNS Patterns/*.hpp)
  FILE(GLOB SOURCES_PATTERNS Patterns/*.cpp)
  FILE(GLOB SOURCES_PATTERNS_PARALLEL_REDUCE Patterns/ParallelReduce/*.cpp)
  FILE(GLOB HEADERS_PATTERNS_PARALLEL_REDUCE Patterns/ParallelReduce/*.hpp)
  FILE(GLOB SOURCES_PATTERNS_PARALLEL_REDUCE_IMPL Patterns/ParallelReduce/impl/*.cpp)
  FILE(GLOB HEADERS_PATTERNS_PARALLEL_REDUCE_IMPL Patterns/ParallelReduce/impl/*.hpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_PATTERNS} )
  LIST(APPEND SOURCES         ${SOURCES_PATTERNS} )
  LIST(APPEND HEADERS_PRIVATE ${HEADERS_PATTERNS_PARALLEL_REDUCE} )
  LIST(APPEND SOURCES         ${SOURCES_PATTERNS_PARALLEL_REDUCE} )
  LIST(APPEND HEADERS_PRIVATE ${HEADERS_PATTERNS_PARALLEL_REDUCE_IMPL} )
  LIST(APPEND SOURCES         ${SOURCES_PATTERNS_PARALLEL_REDUCE_IMPL} )

  INSTALL(FILES ${HEADERS_PATTERNS} DESTINATION ${TRILINOS_INCDIR}/Patterns/)
  INSTALL(FILES ${HEADERS_PATTERNS_PARALLEL_REDUCE} DESTINATION ${TRILINOS_INCDIR}/Patterns/ParallelReduce)
  INSTALL(FILES ${HEADERS_PATTERNS_PARALLEL_REDUCE_IMPL} DESTINATION ${TRILINOS_INCDIR}/Patterns/ParallelReduce/impl)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_CONCEPTS Concepts/*.hpp)
  FILE(GLOB SOURCES_CONCEPTS Concepts/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS} )
  LIST(APPEND SOURCES         ${SOURCES_CONCEPTS} )

  INSTALL(FILES ${HEADERS_CONCEPTS} DESTINATION ${TRILINOS_INCDIR}/Concepts/)

  FILE(GLOB SOURCES_CONCEPTS_FUNCTOR Concepts/Functor/*.cpp)
  FILE(GLOB HEADERS_CONCEPTS_FUNCTOR Concepts/Functor/*.hpp)
  FILE(GLOB SOURCES_CONCEPTS_FUNCTOR_IMPL Concepts/Functor/impl/*.cpp)
  FILE(GLOB HEADERS_CONCEPTS_FUNCTOR_IMPL Concepts/Functor/impl/*.hpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_FUNCTOR} )
  LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_FUNCTOR} )
  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_FUNCTOR_IMPL} )
  LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_FUNCTOR_IMPL} )

  INSTALL(FILES ${HEADERS_CONCEPTS_FUNCTOR} DESTINATION ${TRILINOS_INCDIR}/Concepts/Functor)
  INSTALL(FILES ${HEADERS_CONCEPTS_FUNCTOR_IMPL} DESTINATION ${TRILINOS_INCDIR}/Concepts/Functor/impl)

  FILE(GLOB SOURCES_CONCEPTS_EXECUTIONPOLICY Concepts/ExecutionPolicy/*.cpp)
  FILE(GLOB HEADERS_CONCEPTS_EXECUTIONPOLICY Concepts/ExecutionPolicy/*.hpp)
  #FILE(GLOB SOURCES_CONCEPTS_EXECUTIONPOLICY_IMPL Concepts/ExecutionPolicy/impl/*.cpp)
  #FILE(GLOB HEADERS_CONCEPTS_EXECUTIONPOLICY_IMPL Concepts/ExecutionPolicy/impl/*.hpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_EXECUTIONPOLICY} )
  LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_EXECUTIONPOLICY} )
  #LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_EXECUTIONPOLICY_IMPL} )
  #LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_EXECUTIONPOLICY_IMPL} )

  INSTALL(FILES ${HEADERS_CONCEPTS_EXECUTIONPOLICY} DESTINATION ${TRILINOS_INCDIR}/Concepts/ExecutionPolicy)
  #INSTALL(FILES ${HEADERS_CONCEPTS_EXECUTIONPOLICY_IMPL} DESTINATION ${TRILINOS_INCDIR}/Concepts/ExecutionPolicy/impl)

  FILE(GLOB SOURCES_CONCEPTS_REDUCER Concepts/Reducer/*.cpp)
  FILE(GLOB HEADERS_CONCEPTS_REDUCER Concepts/Reducer/*.hpp)
  #FILE(GLOB SOURCES_CONCEPTS_REDUCER_IMPL Concepts/Reducer/impl/*.cpp)
  #FILE(GLOB HEADERS_CONCEPTS_REDUCER_IMPL Concepts/Reducer/impl/*.hpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_REDUCER} )
  LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_REDUCER} )
  #LIST(APPEND HEADERS_PRIVATE ${HEADERS_CONCEPTS_REDUCER_IMPL} )
  #LIST(APPEND SOURCES         ${SOURCES_CONCEPTS_REDUCER_IMPL} )

  INSTALL(FILES ${HEADERS_CONCEPTS_REDUCER} DESTINATION ${TRILINOS_INCDIR}/Concepts/Reducer)
  #INSTALL(FILES ${HEADERS_CONCEPTS_REDUCER_IMPL} DESTINATION ${TRILINOS_INCDIR}/Concepts/Reducer/impl)

  #-----------------------------------------------------------------------------

  FILE(GLOB HEADERS_PROPERTIES Properties/*.hpp)
  FILE(GLOB SOURCES_PROPERTIES Properties/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_PROPERTIES} )
  LIST(APPEND SOURCES         ${SOURCES_PROPERTIES} )

  INSTALL(FILES ${HEADERS_PROPERTIES} DESTINATION ${TRILINOS_INCDIR}/Properties/)

  #-----------------------------------------------------------------------------
  FILE(GLOB HEADERS_QTHREADS Qthreads/*.hpp)
  FILE(GLOB SOURCES_QTHREADS Qthreads/*.cpp)

  LIST(APPEND HEADERS_PRIVATE ${HEADERS_QTHREADS} )
  LIST(APPEND SOURCES         ${SOURCES_QTHREADS} )

  IF(KOKKOS_ENABLE_EXPLICIT_INSTANTIATION)
    LIST(APPEND SOURCES       ${ETI_SOURCES} )
  ENDIF()

  INSTALL(FILES ${HEADERS_QTHREADS} DESTINATION ${TRILINOS_INCDIR}/Qthreads/)

  TRIBITS_ADD_LIBRARY(
      kokkoscore
      HEADERS ${HEADERS_PUBLIC}
      NOINSTALLHEADERS ${HEADERS_PRIVATE}
      SOURCES ${SOURCES}
      DEPLIBS
      )

#-----------------------------------------------------------------------------
#  In the new build system, sources are calculated by Makefile.kokkos
else()

  INSTALL (DIRECTORY
           "${CMAKE_CURRENT_SOURCE_DIR}/"
           DESTINATION ${TRILINOS_INCDIR}
           FILES_MATCHING PATTERN "*.hpp"
  )

  TRIBITS_ADD_LIBRARY(
      kokkoscore
      SOURCES ${KOKKOS_CORE_SRCS}
      DEPLIBS
      )

endif()
#-----------------------------------------------------------------------------

# build and install pkgconfig file
CONFIGURE_FILE(kokkos.pc.in kokkos.pc @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/kokkos.pc DESTINATION lib/pkgconfig)
